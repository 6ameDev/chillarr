name: hotflix

services:

  # Jellyfin (Tailscale Sidecar)

  ts-jellyfin:
    image: tailscale/tailscale:latest
    container_name: ts-jellyfin
    hostname: hotflix
    environment:
      - TS_AUTHKEY=${TAILSCALE_AUTHKEY}?ephemeral=false
      - "TS_EXTRA_ARGS=--advertise-tags=tag:container --reset"
      - TS_SERVE_CONFIG=/config/ts-jellyfin.json
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    volumes:
      - ${APP_CONFIG_DIR}/ts-jellyfin/state:/var/lib/tailscale
      - ./../configs:/config
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    ports:
      - 8096:8096
      - 8920:8920
      - 7359:7359/udp
      - 1900:1900/udp
    restart: unless-stopped
    networks:
      - tailcar

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    network_mode: service:ts-jellyfin
    depends_on:
      - ts-jellyfin
    environment:
      - PUID=13000
      - PGID=13000
      - UMASK=002
      - TZ=${TIMEZONE}
      - JELLYFIN_PublishedServerUrl=${JELLYFIN_SERVER_URL}
    volumes:
      - ${APP_CONFIG_DIR}/hotflix/jellyfin/config:/config
      - ${HOTFLIX_DATA_DIR}/shows/media:/media/shows:ro
      - ${HOTFLIX_DATA_DIR}/movies/media:/media/movies:ro
    restart: unless-stopped

  # Servarr Apps (Tailscale TSDProxy)

  # radarr:
  #   image: lscr.io/linuxserver/radarr:latest
  #   container_name: radarr
  #   environment:
  #     - PUID=13002
  #     - PGID=13000
  #     - UMASK=002
  #     - TZ=${TIMEZONE}
  #   volumes:
  #     - ${APP_CONFIG_DIR}/radarr:/config
  #     - ${MEDIA_ONE_DIR}:/media1
  #   ports:
  #     - 7878:7878
  #   labels:
  #     tsdproxy.enable: "true"
  #     tsdproxy.name: "movies"
  #     tsdproxy.ephemeral: "false"
  #   networks:
  #     - tailproxy
  #   restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=13000
      - PGID=13000
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${APP_CONFIG_DIR}/hotflix/sonarr:/config
      - ${HOTFLIX_DATA_DIR}/shows:/data
    ports:
      - 8989:8989
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "shows"
      tsdproxy.ephemeral: "false"
    networks:
      - tailproxy
    restart: unless-stopped

  # qbittorrent:
  #   image: ghcr.io/hotio/qbittorrent:latest
  #   container_name: qbittorrent
  #   environment:
  #     - PUID=13000
  #     - PGID=13000
  #     - UMASK=002
  #     - TZ=${TIMEZONE}
  #     - WEBUI_PORT=8080
  #   volumes:
  #     - ${APP_CONFIG_DIR}/hotflix/qbittorrent:/config
  #     - ${MEDIA_ONE_DIR}/torrents:/media1/torrents
  #     - ${MEDIA_TWO_DIR}/torrents:/media2/torrents
  #   ports:
  #     - 8080:8080
  #     - 6881:6881
  #     - 6881:6881/udp
  #   labels:
  #     tsdproxy.enable: "true"
  #     tsdproxy.name: "qbit"
  #     tsdproxy.ephemeral: "false"
  #   networks:
  #     - tailproxy
  #   restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=13000
      - PGID=13000
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${APP_CONFIG_DIR}/hotflix/prowlarr:/config
    ports:
      - 9696:9696
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "prowlarr"
      tsdproxy.ephemeral: "false"
    networks:
      - tailproxy
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TIMEZONE}
    ports:
      - 8191:8191
    networks:
      - tailproxy
    restart: unless-stopped

networks:
  tailcar:
    name: tailcar
  tailproxy:
    name: tailproxy
    external: true
